current_tasks:
  display: |
    # To do

    Commands:
      Switch a project to be top priority
      Add a new task (Quick)
        question
        general task
      Add a new task (Detailed)
      Add a new project
      Task is done
      Start task
      Switch a task to a different project
      Start taking notes
      Search for questions
      Search through notes


  tables:
    - "select desc, short_task_type, project_name from available_tasks;"
    - "  {desc} ({short_task_type}) - {project_name}"
  commands:
    - command: ""
      to: ""
      queries:
        - ""


schema:
  display: |
    CREATE TABLE tasks(
      id integer primary key,
      desc text,
      project integer,
      task_type integer,
      created_at timestamp default current_timestamp,
      hide_until timestamp,
      completed_at timestamp);

    CREATE TABLE blocks(
      id integer primary key,
      blocked integer,
      blocker integer);

    CREATE TABLE task_types(
      id integer primary key,
      short_name text,
      name text);

    insert into task_types(short_name, name) values ('P', 'Project');
    insert into task_types(short_name, name) values ('WF', 'Waiting For');
    insert into task_types(short_name, name) values ('R', 'Review Notes');
    insert into task_types(short_name, name) values ('Q', 'Question');
    insert into task_types(short_name, name) values ('T', 'General Task');

    CREATE TABLE projects(
      id integer primary key,
      created_at timestamp default current_timestamp,
      name text
      template integer,
      priority integer);

    CREATE TABLE meetings(
      id integer primary key,
      created_at timestamp default current_timestamp,
      archived_at timestamp default current_timestamp,
      name text);

    CREATE TABLE meeting_notes(
      id integer primary key,
      created_at timestamp default current_timestamp,
      line text);

    CREATE TABLE question_answers(
      id integer primary key,
      question integer,
      line text);


    CREATE VIEW available_tasks as
      with undone_unsnoozed_tasks as (
        select
          t.desc
        from tasks as t
        where completed_at is NULL
        and (hide_until is NULL or hide_until < current_timestamp)
      ),
      blocked_by as (
        select
          b.blocked,
          b.blocker,
          t.completed_at
        from blocks as b
        inner join tasks as t on t.id = b.blocker
        where t.completed_at is null
        union
        select t2.project, t2.id, t2.completed_at
        where t2.completed_at is null
        and t2.project is not null
      )
      select
        t.id as id,
        t.desc as desc,
        t.project as project_id,
        p.name as project_name,
        t.task_type as task_type_id,
        tt.short_name as short_task_type,
        t.created_at,
        t.hide_until,
        t.completed_at
      from undone_unsnoozed_tasks as t
      left join blocked_by as b on t.id = b.blocked
      left join projects as p on t.project = p.id
      left join task_types as tt on t.task_type = tt.id
      where b.blocker is null
      order by coalesce(p.priority, 1) asc, p.id desc, t.created_at desc;

    CREATE TABLE project_templates(
      id integer primary key,
      name text,
      project_name text,
      created_at timestamp default current_timestamp);

    CREATE TABLE project_template_fields(
      id integer primary key,
      name text);

    CREATE TABLE project_data(
      id integer primary key,
      project integer,
      field integer,
      value text);

    CREATE TABLE project_template_tasks(
      id integer primary key,
      template integer,
      task_desc text,
      format_field integer,
      task_type integer);

    CREATE VIEW generated_project_tasks as
      select
        format(tt.task_desc, pd.value) as desc,
        p.id as project,
        tt.task_type as task_type
      from project_template_task as tt
      inner join projects as p
        on p.template = tt.template
      left join project_data as pd
        on tt.format_field = pd.field
        and p.id = pd.project;

